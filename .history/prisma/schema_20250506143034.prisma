// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  login    String @unique
  name     String
  password String
}

model Developer {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  name       String
  img        String[]
  position   String
  telegram   String?
  instagram  String?
  whatsapp   String?
  vk         String?
  tiktok     String?
  behance    String?
  pinterest  String?
  artstation String?

  cases     Case[]     @relation("CaseDevelopers")      // —Å–≤—è–∑—å —Å Case
  caseHomes CaseHome[] @relation("CaseHomeDevelopers")  // —Å–≤—è–∑—å —Å CaseHome
}

model Case {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  img       String[]
  price     Int?
  website   String?

  developer   Developer? @relation(fields: [developerId], references: [id])
  developerId Int?

  categories Category[] @relation("CaseCategories")
}

model CaseHome {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  img       String[]
  price     Int?
  website   String?

  developer   Developer? @relation(fields: [developerId], references: [id])
  developerId Int?

  categories Category[] @relation("CaseHomeCategories")
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  title     String

  // –¥—Ä—É–≥–∏–µ —Å–≤—è–∑–∏
  cases     Case[]     @relation("CaseCategories")
  caseHomes CaseHome[] @relation("CaseHomeCategories")

  shops Shop[] @relation("ShopCategories") // üëà –∏–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å
}

model Discussion {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name    String
  phone   String
  email   String
  company String
  budget  Int
  message String
}

model Contact {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  address   String
  phone     String
  telegram  String
  instagram String
  vk        String
  email     String
  map       String?
}

model Shop {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  img       String[]
  price     Int?
  website   String?

  categories Category[] @relation("ShopCategories") // üí° –∏–º—è —Å–≤—è–∑–∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∑–¥–µ—Å—å
}
