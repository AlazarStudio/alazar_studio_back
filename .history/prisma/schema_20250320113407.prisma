// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  login    String @unique
  name     String
  password String
}

model Developer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name     String
  img      String[]
  position String
  Case     Case[]
  CaseHome CaseHome[]
  Telegram String
  Instagram String
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title String

  Case       Case?     @relation(fields: [caseId], references: [id])
  caseId     Int?
  CaseHome   CaseHome? @relation(fields: [caseHomeId], references: [id])
  caseHomeId Int?
}

model Case {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name    String
  img     String[]
  price   Int?
  website String

  developer   Developer  @relation(fields: [developerId], references: [id])
  categories  Category[]
  developerId Int
}

model CaseHome {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name  String
  img   String[]
  price Int?

  developer   Developer  @relation(fields: [developerId], references: [id])
  categories  Category[]
  developerId Int
}

model Discussion {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name    String
  phone   String
  email   String
  company String
  budget  Int
  message String
}

model Contact {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  address   String
  phone     String
  telegram  String
  instagram String
  vk        String
  email     String
  map       String?
}
